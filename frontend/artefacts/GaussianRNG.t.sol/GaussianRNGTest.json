{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_SCRIPT",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testOutput",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040526000805462ff00ff1916620100011790557fada5013122d395ba3c54772283fb069b10426056ef8ca54750cb9bb552a59e7d60085534801561004557600080fd5b506109bb806100556000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80630a9254e4146100675780633a76846314610071578063ba414fa6146100a9578063c1cb256f146100c1578063f8ccbf47146100c9578063fa7626d4146100dc575b600080fd5b61006f6100e9565b005b61008c737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b0390911681526020015b60405180910390f35b6100b1610134565b60405190151581526020016100a0565b61006f61025f565b6000546100b19062010000900460ff1681565b6000546100b19060ff1681565b6040516100f5906103d0565b604051809103906000f080158015610111573d6000803e3d6000fd5b50600980546001600160a01b0319166001600160a01b0392909216919091179055565b60008054610100900460ff16156101545750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1561025a5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b828401528251808303840181526060830190935260009290916101e2917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001610418565b60408051601f19818403018152908290526101fc9161043c565b6000604051808303816000865af19150503d8060008114610239576040519150601f19603f3d011682016040523d82523d6000602084013e61023e565b606091505b5091505080806020019051810190610256919061044f565b9150505b919050565b600954600854604051639215358760e01b81526010926000926001600160a01b03909116916392153587916102a1918690600401918252602082015260400190565b600060405180830381865afa1580156102be573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102e69190810190610487565b905061030b816000815181106102fe576102fe610545565b6020026020010151610367565b610321816001815181106102fe576102fe610545565b610337816002815181106102fe576102fe610545565b61034d816003815181106102fe576102fe610545565b610363816004815181106102fe576102fe610545565b5050565b6103ac8160405160240161037d91815260200190565b60408051601f198184030181529190526020810180516001600160e01b0316634e0c1d1d60e01b1790526103af565b50565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b61042a8061055c83390190565b6000815160005b818110156103fe57602081850181015186830152016103e4565b8181111561040d576000828601525b509290920192915050565b6001600160e01b031983168152600061043460048301846103dd565b949350505050565b600061044882846103dd565b9392505050565b60006020828403121561046157600080fd5b8151801515811461044857600080fd5b634e487b7160e01b600052604160045260246000fd5b6000602080838503121561049a57600080fd5b825167ffffffffffffffff808211156104b257600080fd5b818501915085601f8301126104c657600080fd5b8151818111156104d8576104d8610471565b8060051b604051601f19603f830116810181811085821117156104fd576104fd610471565b60405291825284820192508381018501918883111561051b57600080fd5b938501935b8285101561053957845184529385019392850192610520565b98975050505050505050565b634e487b7160e01b600052603260045260246000fdfe608060405234801561001057600080fd5b5061040a806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80639215358714610046578063a17b1fe01461006f578063db1c6bac14610090575b600080fd5b610059610054366004610259565b6100b1565b60405161006691906102b6565b60405180910390f35b61008261007d366004610259565b6100c4565b6040516100669291906102c9565b6100a361009e3660046102ea565b610117565b604051908152602001610066565b60606100bd8383610128565b9392505050565b60006060816100d34286610319565b6040516020016100e591815260200190565b6040516020818303038152906040528051906020012060001c90508061010b8286610128565b92509250509250929050565b60006101228261023a565b92915050565b606060008360405160200161013f91815260200190565b6040516020818303038152906040528051906020012060001c905060008367ffffffffffffffff81111561017557610175610331565b60405190808252806020026020018201604052801561019e578160200160208202803683370190505b50905060005b848110156102315760006101b78461023a565b9050613e806101c782607d610347565b6101d19190610366565b8383815181106101e3576101e36103a5565b6020026020010181815250508360405160200161020291815260200190565b6040516020818303038152906040528051906020012060001c9350508080610229906103bb565b9150506101a4565b50949350505050565b60005b81156102545760001982019091169060010161023d565b919050565b6000806040838503121561026c57600080fd5b50508035926020909101359150565b600081518084526020808501945080840160005b838110156102ab5781518752958201959082019060010161028f565b509495945050505050565b6020815260006100bd602083018461027b565b8281526040602082015260006102e2604083018461027b565b949350505050565b6000602082840312156102fc57600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b6000821982111561032c5761032c610303565b500190565b634e487b7160e01b600052604160045260246000fd5b600081600019048311821515161561036157610361610303565b500290565b60008083128015600160ff1b85018412161561038457610384610303565b6001600160ff1b038401831381161561039f5761039f610303565b50500390565b634e487b7160e01b600052603260045260246000fd5b6000600182016103cd576103cd610303565b506001019056fea26469706673582212204a24609016571bdb6079c9be955bf8f87eb96139ce5d86aea8ff1b48b4c5b26464736f6c634300080f0033a264697066735822122003327f0b292845392b1704d508f03e140b965623be86f4374fcfe190de1e93f664736f6c634300080f0033",
    "sourceMap": "157:559:30:-:0;;;1572:26:21;;;-1:-1:-1;;170:28:5;;;;;219:77:30;196:100;;157:559;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100625760003560e01c80630a9254e4146100675780633a76846314610071578063ba414fa6146100a9578063c1cb256f146100c1578063f8ccbf47146100c9578063fa7626d4146100dc575b600080fd5b61006f6100e9565b005b61008c737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b0390911681526020015b60405180910390f35b6100b1610134565b60405190151581526020016100a0565b61006f61025f565b6000546100b19062010000900460ff1681565b6000546100b19060ff1681565b6040516100f5906103d0565b604051809103906000f080158015610111573d6000803e3d6000fd5b50600980546001600160a01b0319166001600160a01b0392909216919091179055565b60008054610100900460ff16156101545750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1561025a5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b828401528251808303840181526060830190935260009290916101e2917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001610418565b60408051601f19818403018152908290526101fc9161043c565b6000604051808303816000865af19150503d8060008114610239576040519150601f19603f3d011682016040523d82523d6000602084013e61023e565b606091505b5091505080806020019051810190610256919061044f565b9150505b919050565b600954600854604051639215358760e01b81526010926000926001600160a01b03909116916392153587916102a1918690600401918252602082015260400190565b600060405180830381865afa1580156102be573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102e69190810190610487565b905061030b816000815181106102fe576102fe610545565b6020026020010151610367565b610321816001815181106102fe576102fe610545565b610337816002815181106102fe576102fe610545565b61034d816003815181106102fe576102fe610545565b610363816004815181106102fe576102fe610545565b5050565b6103ac8160405160240161037d91815260200190565b60408051601f198184030181529190526020810180516001600160e01b0316634e0c1d1d60e01b1790526103af565b50565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b61042a8061055c83390190565b6000815160005b818110156103fe57602081850181015186830152016103e4565b8181111561040d576000828601525b509290920192915050565b6001600160e01b031983168152600061043460048301846103dd565b949350505050565b600061044882846103dd565b9392505050565b60006020828403121561046157600080fd5b8151801515811461044857600080fd5b634e487b7160e01b600052604160045260246000fd5b6000602080838503121561049a57600080fd5b825167ffffffffffffffff808211156104b257600080fd5b818501915085601f8301126104c657600080fd5b8151818111156104d8576104d8610471565b8060051b604051601f19603f830116810181811085821117156104fd576104fd610471565b60405291825284820192508381018501918883111561051b57600080fd5b938501935b8285101561053957845184529385019392850192610520565b98975050505050505050565b634e487b7160e01b600052603260045260246000fdfe608060405234801561001057600080fd5b5061040a806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80639215358714610046578063a17b1fe01461006f578063db1c6bac14610090575b600080fd5b610059610054366004610259565b6100b1565b60405161006691906102b6565b60405180910390f35b61008261007d366004610259565b6100c4565b6040516100669291906102c9565b6100a361009e3660046102ea565b610117565b604051908152602001610066565b60606100bd8383610128565b9392505050565b60006060816100d34286610319565b6040516020016100e591815260200190565b6040516020818303038152906040528051906020012060001c90508061010b8286610128565b92509250509250929050565b60006101228261023a565b92915050565b606060008360405160200161013f91815260200190565b6040516020818303038152906040528051906020012060001c905060008367ffffffffffffffff81111561017557610175610331565b60405190808252806020026020018201604052801561019e578160200160208202803683370190505b50905060005b848110156102315760006101b78461023a565b9050613e806101c782607d610347565b6101d19190610366565b8383815181106101e3576101e36103a5565b6020026020010181815250508360405160200161020291815260200190565b6040516020818303038152906040528051906020012060001c9350508080610229906103bb565b9150506101a4565b50949350505050565b60005b81156102545760001982019091169060010161023d565b919050565b6000806040838503121561026c57600080fd5b50508035926020909101359150565b600081518084526020808501945080840160005b838110156102ab5781518752958201959082019060010161028f565b509495945050505050565b6020815260006100bd602083018461027b565b8281526040602082015260006102e2604083018461027b565b949350505050565b6000602082840312156102fc57600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b6000821982111561032c5761032c610303565b500190565b634e487b7160e01b600052604160045260246000fd5b600081600019048311821515161561036157610361610303565b500290565b60008083128015600160ff1b85018412161561038457610384610303565b6001600160ff1b038401831381161561039f5761039f610303565b50500390565b634e487b7160e01b600052603260045260246000fd5b6000600182016103cd576103cd610303565b506001019056fea26469706673582212204a24609016571bdb6079c9be955bf8f87eb96139ce5d86aea8ff1b48b4c5b26464736f6c634300080f0033a264697066735822122003327f0b292845392b1704d508f03e140b965623be86f4374fcfe190de1e93f664736f6c634300080f0033",
    "sourceMap": "157:559:30:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;325:64;;;:::i;:::-;;321:38:5;;250:64;321:38;;;;;-1:-1:-1;;;;;189:32:38;;;171:51;;159:2;144:18;321:38:5;;;;;;;;1819:584:21;;;:::i;:::-;;;398:14:38;;391:22;373:41;;361:2;346:18;1819:584:21;233:187:38;395:319:30;;;:::i;170:28:5:-;;;;;;;;;;;;1572:26:21;;;;;;;;;325:64:30;365:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;359:3:30;:23;;-1:-1:-1;;;;;;359:23:30;-1:-1:-1;;;;;359:23:30;;;;;;;;;;325:64::o;1819:584:21:-;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:21;;;;;;;;1819:584::o;1869:528::-;1941:17;2990:42;2978:55;3059:16;1980:374;;2196:43;;;1671:64;2196:43;;;599:51:38;;;-1:-1:-1;;;666:18:38;;;659:34;2196:43:21;;;;;;;;;572:18:38;;;2196:43:21;;;-1:-1:-1;;1671:64:21;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:21;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:21:o;395:319:30:-;484:3;;519:4;;484:43;;-1:-1:-1;;;484:43:30;;446:2;;434:9;;-1:-1:-1;;;;;484:3:30;;;;:34;;:43;;446:2;;484:43;;1978:25:38;;;2034:2;2019:18;;2012:34;1966:2;1951:18;;1804:248;484:43:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;484:43:30;;;;;;;;;;;;:::i;:::-;458:69;;537:26;552:7;560:1;552:10;;;;;;;;:::i;:::-;;;;;;;537:14;:26::i;:::-;573;588:7;596:1;588:10;;;;;;;;:::i;573:26::-;609;624:7;632:1;624:10;;;;;;;;:::i;609:26::-;645;660:7;668:1;660:10;;;;;;;;:::i;645:26::-;681;696:7;704:1;696:10;;;;;;;;:::i;681:26::-;424:290;;395:319::o;664:111:9:-;712:56;764:2;728:39;;;;;;3574:25:38;;3562:2;3547:18;;3430:175;728:39:9;;;;-1:-1:-1;;728:39:9;;;;;;;;;;;;;;-1:-1:-1;;;;;728:39:9;-1:-1:-1;;;728:39:9;;;712:15;:56::i;:::-;664:111;:::o;181:376::-;275:14;;131:42;448:2;435:16;;251:21;;275:14;435:16;131:42;484:5;473:68;464:77;;401:150;;181:376;:::o;-1:-1:-1:-;;;;;;;;:::o;704:336:38:-;745:3;783:5;777:12;807:1;817:128;831:6;828:1;825:13;817:128;;;928:4;913:13;;;909:24;;903:31;890:11;;;883:52;846:12;817:128;;;963:6;960:1;957:13;954:48;;;998:1;989:6;984:3;980:16;973:27;954:48;-1:-1:-1;1018:16:38;;;;;704:336;-1:-1:-1;;704:336:38:o;1045:278::-;-1:-1:-1;;;;;;1230:33:38;;1218:46;;1200:3;1280:37;1314:1;1305:11;;1297:6;1280:37;:::i;:::-;1273:44;1045:278;-1:-1:-1;;;;1045:278:38:o;1328:189::-;1457:3;1482:29;1507:3;1499:6;1482:29;:::i;:::-;1475:36;1328:189;-1:-1:-1;;;1328:189:38:o;1522:277::-;1589:6;1642:2;1630:9;1621:7;1617:23;1613:32;1610:52;;;1658:1;1655;1648:12;1610:52;1690:9;1684:16;1743:5;1736:13;1729:21;1722:5;1719:32;1709:60;;1765:1;1762;1755:12;2057:127;2118:10;2113:3;2109:20;2106:1;2099:31;2149:4;2146:1;2139:15;2173:4;2170:1;2163:15;2189:1104;2283:6;2314:2;2357;2345:9;2336:7;2332:23;2328:32;2325:52;;;2373:1;2370;2363:12;2325:52;2406:9;2400:16;2435:18;2476:2;2468:6;2465:14;2462:34;;;2492:1;2489;2482:12;2462:34;2530:6;2519:9;2515:22;2505:32;;2575:7;2568:4;2564:2;2560:13;2556:27;2546:55;;2597:1;2594;2587:12;2546:55;2626:2;2620:9;2648:2;2644;2641:10;2638:36;;;2654:18;;:::i;:::-;2700:2;2697:1;2693:10;2732:2;2726:9;2795:2;2791:7;2786:2;2782;2778:11;2774:25;2766:6;2762:38;2850:6;2838:10;2835:22;2830:2;2818:10;2815:18;2812:46;2809:72;;;2861:18;;:::i;:::-;2897:2;2890:22;2947:18;;;2981:15;;;;-1:-1:-1;3023:11:38;;;3019:20;;;3051:19;;;3048:39;;;3083:1;3080;3073:12;3048:39;3107:11;;;;3127:135;3143:6;3138:3;3135:15;3127:135;;;3209:10;;3197:23;;3160:12;;;;3240;;;;3127:135;;;3281:6;2189:1104;-1:-1:-1;;;;;;;;2189:1104:38:o;3298:127::-;3359:10;3354:3;3350:20;3347:1;3340:31;3390:4;3387:1;3380:15;3414:4;3411:1;3404:15",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_SCRIPT()": "f8ccbf47",
    "IS_TEST()": "fa7626d4",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "testOutput()": "c1cb256f",
    "vm()": "3a768463"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_SCRIPT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testOutput\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vm\",\"outputs\":[{\"internalType\":\"contract Vm\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/GaussianRNG.t.sol\":\"GaussianRNGTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":OnChainRNG/=lib/OnChainRNG/\",\":chainlink-v0.4/=lib/chainlink/contracts/src/v0.4/\",\":chainlink-v0.8/=lib/chainlink/contracts/src/v0.8/\",\":chainlink/=lib/chainlink/integration-tests/contracts/ethereum/src/\",\":ds-test/=lib/solmate/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\",\":~/=src/\"]},\"sources\":{\"lib/OnChainRNG/GaussianRNG/contracts/GaussianRNG.sol\":{\"keccak256\":\"0x53736fbc85de286dba616833ffbbabfe294ee2a396b46e47795bdcd58c46b8d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ab11fb99851538478fce091f18f2c477a84dbc2e6c77bb8e43a7fb4d98daf8a\",\"dweb:/ipfs/QmUxwS7ZurMHWyQcsUN2u83ERiG1XvQrr8wbLzRBabZtkW\"]},\"lib/forge-std/src/Script.sol\":{\"keccak256\":\"0x9d09c1e55cd508d3376cff9961625d51d73f8ce075ec1e9deed41408a4556e00\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8880c5551daf337ab91665a9ce593df67a9eb11b0bee820f631d324d2fdd3a8b\",\"dweb:/ipfs/QmNpvSBGnS9Jr6Swd6XKsijG59a4yjYemWCFwprjKFkpNC\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x1297a1cc393bc8163ccf143e5335536e78cb25ac24a4f6dfdb25f5746dd4827e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://945ccffad9fc09d2aa0ac200a80dcfa2f491dba8680fc9c3d3d450d891284b87\",\"dweb:/ipfs/QmYSfFb1L6LN1ZB9KWzZqxt2iAbpuFDskBcU1Bz4RiyuQ5\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x6c9cbd51234372b66bf7c146870edf0855770c46e960a8fae8f354ddf382876b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd0ff1f449294dd1447b9d483c52d78e137d8cac518646e76df9fdd4d185d6c2\",\"dweb:/ipfs/QmS3JP4vKgvAWo8Tc7zVrGxbdR7t37ayk1mTHN3seD6UAZ\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x1a5767028a0c3985e991456fc9650055e28b01b787c56b11f66ac30498a153ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f86887212eacca450a15a8a5bf9fe83fd91a2ba623df8e9c32c75a31824c8ea2\",\"dweb:/ipfs/QmTUHBNdZwntgjbFZne7fY9ZJLNGYWaq3uWfGk6FyqdAkB\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f\",\"dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW\"]},\"lib/solmate/lib/ds-test/src/test.sol\":{\"keccak256\":\"0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5\",\"dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr\"]},\"test/GaussianRNG.t.sol\":{\"keccak256\":\"0xe8f74221cc7a10c966036585eb8ffa334a8206b57e759213457c28a659cfbf77\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://e1179d3bdd916d65cced92db2cba52f7671db62d1580033b8ea6ec1bbb9f60d1\",\"dweb:/ipfs/QmXZ2CGC4QtFpertfyGDVyBwTptyX4ok43ey2KvWMrNTgQ\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_SCRIPT",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testOutput"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vm",
          "outputs": [
            {
              "internalType": "contract Vm",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":OnChainRNG/=lib/OnChainRNG/",
        ":chainlink-v0.4/=lib/chainlink/contracts/src/v0.4/",
        ":chainlink-v0.8/=lib/chainlink/contracts/src/v0.8/",
        ":chainlink/=lib/chainlink/integration-tests/contracts/ethereum/src/",
        ":ds-test/=lib/solmate/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/",
        ":solmate/=lib/solmate/src/",
        ":~/=src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/GaussianRNG.t.sol": "GaussianRNGTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/OnChainRNG/GaussianRNG/contracts/GaussianRNG.sol": {
        "keccak256": "0x53736fbc85de286dba616833ffbbabfe294ee2a396b46e47795bdcd58c46b8d5",
        "urls": [
          "bzz-raw://6ab11fb99851538478fce091f18f2c477a84dbc2e6c77bb8e43a7fb4d98daf8a",
          "dweb:/ipfs/QmUxwS7ZurMHWyQcsUN2u83ERiG1XvQrr8wbLzRBabZtkW"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Script.sol": {
        "keccak256": "0x9d09c1e55cd508d3376cff9961625d51d73f8ce075ec1e9deed41408a4556e00",
        "urls": [
          "bzz-raw://8880c5551daf337ab91665a9ce593df67a9eb11b0bee820f631d324d2fdd3a8b",
          "dweb:/ipfs/QmNpvSBGnS9Jr6Swd6XKsijG59a4yjYemWCFwprjKFkpNC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x1297a1cc393bc8163ccf143e5335536e78cb25ac24a4f6dfdb25f5746dd4827e",
        "urls": [
          "bzz-raw://945ccffad9fc09d2aa0ac200a80dcfa2f491dba8680fc9c3d3d450d891284b87",
          "dweb:/ipfs/QmYSfFb1L6LN1ZB9KWzZqxt2iAbpuFDskBcU1Bz4RiyuQ5"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x6c9cbd51234372b66bf7c146870edf0855770c46e960a8fae8f354ddf382876b",
        "urls": [
          "bzz-raw://fd0ff1f449294dd1447b9d483c52d78e137d8cac518646e76df9fdd4d185d6c2",
          "dweb:/ipfs/QmS3JP4vKgvAWo8Tc7zVrGxbdR7t37ayk1mTHN3seD6UAZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x1a5767028a0c3985e991456fc9650055e28b01b787c56b11f66ac30498a153ab",
        "urls": [
          "bzz-raw://f86887212eacca450a15a8a5bf9fe83fd91a2ba623df8e9c32c75a31824c8ea2",
          "dweb:/ipfs/QmTUHBNdZwntgjbFZne7fY9ZJLNGYWaq3uWfGk6FyqdAkB"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671",
        "urls": [
          "bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f",
          "dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW"
        ],
        "license": "MIT"
      },
      "lib/solmate/lib/ds-test/src/test.sol": {
        "keccak256": "0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54",
        "urls": [
          "bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5",
          "dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr"
        ],
        "license": "GPL-3.0-or-later"
      },
      "test/GaussianRNG.t.sol": {
        "keccak256": "0xe8f74221cc7a10c966036585eb8ffa334a8206b57e759213457c28a659cfbf77",
        "urls": [
          "bzz-raw://e1179d3bdd916d65cced92db2cba52f7671db62d1580033b8ea6ec1bbb9f60d1",
          "dweb:/ipfs/QmXZ2CGC4QtFpertfyGDVyBwTptyX4ok43ey2KvWMrNTgQ"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/GaussianRNG.t.sol",
    "id": 33602,
    "exportedSymbols": {
      "DSTest": [
        27067
      ],
      "GaussianRNG": [
        194
      ],
      "GaussianRNGTest": [
        33601
      ],
      "IGaussianRNG": [
        31
      ],
      "Script": [
        1569
      ],
      "StdStorage": [
        4597
      ],
      "Test": [
        4499
      ],
      "Vm": [
        6618
      ],
      "console": [
        14682
      ],
      "console2": [
        22746
      ],
      "stdError": [
        4569
      ],
      "stdJson": [
        1929
      ],
      "stdMath": [
        5838
      ],
      "stdStorage": [
        5699
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:678:30",
    "nodes": [
      {
        "id": 33520,
        "nodeType": "PragmaDirective",
        "src": "39:23:30",
        "nodes": [],
        "literals": [
          "solidity",
          "<",
          "0.9",
          ".0"
        ]
      },
      {
        "id": 33521,
        "nodeType": "ImportDirective",
        "src": "64:28:30",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 33602,
        "sourceUnit": 5839,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 33522,
        "nodeType": "ImportDirective",
        "src": "93:62:30",
        "nodes": [],
        "absolutePath": "lib/OnChainRNG/GaussianRNG/contracts/GaussianRNG.sol",
        "file": "lib/OnChainRNG/GaussianRNG/contracts/GaussianRNG.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 33602,
        "sourceUnit": 195,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 33601,
        "nodeType": "ContractDefinition",
        "src": "157:559:30",
        "nodes": [
          {
            "id": 33527,
            "nodeType": "VariableDeclaration",
            "src": "196:100:30",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "seed",
            "nameLocation": "204:4:30",
            "scope": 33601,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 33525,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "196:7:30",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3738353431363630373937303434393130393638383239393032343036333432333334313038333639323236333739383236313136313631343436343432393839323638303839383036343631",
              "id": 33526,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "219:77:30",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_78541660797044910968829902406342334108369226379826116161446442989268089806461_by_1",
                "typeString": "int_const 7854...(69 digits omitted)...6461"
              },
              "value": "78541660797044910968829902406342334108369226379826116161446442989268089806461"
            },
            "visibility": "internal"
          },
          {
            "id": 33530,
            "nodeType": "VariableDeclaration",
            "src": "303:15:30",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "rng",
            "nameLocation": "315:3:30",
            "scope": 33601,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_GaussianRNG_$194",
              "typeString": "contract GaussianRNG"
            },
            "typeName": {
              "id": 33529,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 33528,
                "name": "GaussianRNG",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 194,
                "src": "303:11:30"
              },
              "referencedDeclaration": 194,
              "src": "303:11:30",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_GaussianRNG_$194",
                "typeString": "contract GaussianRNG"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 33541,
            "nodeType": "FunctionDefinition",
            "src": "325:64:30",
            "nodes": [],
            "body": {
              "id": 33540,
              "nodeType": "Block",
              "src": "349:40:30",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 33538,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 33533,
                      "name": "rng",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33530,
                      "src": "359:3:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_GaussianRNG_$194",
                        "typeString": "contract GaussianRNG"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 33536,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "365:15:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_GaussianRNG_$194_$",
                          "typeString": "function () returns (contract GaussianRNG)"
                        },
                        "typeName": {
                          "id": 33535,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 33534,
                            "name": "GaussianRNG",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 194,
                            "src": "369:11:30"
                          },
                          "referencedDeclaration": 194,
                          "src": "369:11:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GaussianRNG_$194",
                            "typeString": "contract GaussianRNG"
                          }
                        }
                      },
                      "id": 33537,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "365:17:30",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_GaussianRNG_$194",
                        "typeString": "contract GaussianRNG"
                      }
                    },
                    "src": "359:23:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_GaussianRNG_$194",
                      "typeString": "contract GaussianRNG"
                    }
                  },
                  "id": 33539,
                  "nodeType": "ExpressionStatement",
                  "src": "359:23:30"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "334:5:30",
            "parameters": {
              "id": 33531,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "339:2:30"
            },
            "returnParameters": {
              "id": 33532,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "349:0:30"
            },
            "scope": 33601,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 33600,
            "nodeType": "FunctionDefinition",
            "src": "395:319:30",
            "nodes": [],
            "body": {
              "id": 33599,
              "nodeType": "Block",
              "src": "424:290:30",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    33545
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33545,
                      "mutability": "mutable",
                      "name": "n",
                      "nameLocation": "442:1:30",
                      "nodeType": "VariableDeclaration",
                      "scope": 33599,
                      "src": "434:9:30",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 33544,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "434:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33547,
                  "initialValue": {
                    "hexValue": "3136",
                    "id": 33546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "446:2:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_16_by_1",
                      "typeString": "int_const 16"
                    },
                    "value": "16"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "434:14:30"
                },
                {
                  "assignments": [
                    33552
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33552,
                      "mutability": "mutable",
                      "name": "randoms",
                      "nameLocation": "474:7:30",
                      "nodeType": "VariableDeclaration",
                      "scope": 33599,
                      "src": "458:23:30",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
                        "typeString": "int256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 33550,
                          "name": "int256",
                          "nodeType": "ElementaryTypeName",
                          "src": "458:6:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "id": 33551,
                        "nodeType": "ArrayTypeName",
                        "src": "458:8:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_int256_$dyn_storage_ptr",
                          "typeString": "int256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33558,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 33555,
                        "name": "seed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33527,
                        "src": "519:4:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 33556,
                        "name": "n",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33545,
                        "src": "525:1:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 33553,
                        "name": "rng",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33530,
                        "src": "484:3:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GaussianRNG_$194",
                          "typeString": "contract GaussianRNG"
                        }
                      },
                      "id": 33554,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "reproduceGaussianRandomNumbers",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 89,
                      "src": "484:34:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_int256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256,uint256) pure external returns (int256[] memory)"
                      }
                    },
                    "id": 33557,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "484:43:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
                      "typeString": "int256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "458:69:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 33562,
                          "name": "randoms",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33552,
                          "src": "552:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
                            "typeString": "int256[] memory"
                          }
                        },
                        "id": 33564,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 33563,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "560:1:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "552:10:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "expression": {
                        "id": 33559,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14682,
                        "src": "537:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$14682_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 33561,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "logInt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6667,
                      "src": "537:14:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_int256_$returns$__$",
                        "typeString": "function (int256) view"
                      }
                    },
                    "id": 33565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "537:26:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33566,
                  "nodeType": "ExpressionStatement",
                  "src": "537:26:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 33570,
                          "name": "randoms",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33552,
                          "src": "588:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
                            "typeString": "int256[] memory"
                          }
                        },
                        "id": 33572,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 33571,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "596:1:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "588:10:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "expression": {
                        "id": 33567,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14682,
                        "src": "573:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$14682_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 33569,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "logInt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6667,
                      "src": "573:14:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_int256_$returns$__$",
                        "typeString": "function (int256) view"
                      }
                    },
                    "id": 33573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "573:26:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33574,
                  "nodeType": "ExpressionStatement",
                  "src": "573:26:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 33578,
                          "name": "randoms",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33552,
                          "src": "624:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
                            "typeString": "int256[] memory"
                          }
                        },
                        "id": 33580,
                        "indexExpression": {
                          "hexValue": "32",
                          "id": 33579,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "632:1:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "624:10:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "expression": {
                        "id": 33575,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14682,
                        "src": "609:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$14682_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 33577,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "logInt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6667,
                      "src": "609:14:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_int256_$returns$__$",
                        "typeString": "function (int256) view"
                      }
                    },
                    "id": 33581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "609:26:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33582,
                  "nodeType": "ExpressionStatement",
                  "src": "609:26:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 33586,
                          "name": "randoms",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33552,
                          "src": "660:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
                            "typeString": "int256[] memory"
                          }
                        },
                        "id": 33588,
                        "indexExpression": {
                          "hexValue": "33",
                          "id": 33587,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "668:1:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "660:10:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "expression": {
                        "id": 33583,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14682,
                        "src": "645:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$14682_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 33585,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "logInt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6667,
                      "src": "645:14:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_int256_$returns$__$",
                        "typeString": "function (int256) view"
                      }
                    },
                    "id": 33589,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "645:26:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33590,
                  "nodeType": "ExpressionStatement",
                  "src": "645:26:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 33594,
                          "name": "randoms",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33552,
                          "src": "696:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
                            "typeString": "int256[] memory"
                          }
                        },
                        "id": 33596,
                        "indexExpression": {
                          "hexValue": "34",
                          "id": 33595,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "704:1:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          "value": "4"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "696:10:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "expression": {
                        "id": 33591,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14682,
                        "src": "681:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$14682_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 33593,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "logInt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6667,
                      "src": "681:14:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_int256_$returns$__$",
                        "typeString": "function (int256) view"
                      }
                    },
                    "id": 33597,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "681:26:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33598,
                  "nodeType": "ExpressionStatement",
                  "src": "681:26:30"
                }
              ]
            },
            "functionSelector": "c1cb256f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testOutput",
            "nameLocation": "404:10:30",
            "parameters": {
              "id": 33542,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "414:2:30"
            },
            "returnParameters": {
              "id": 33543,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "424:0:30"
            },
            "scope": 33601,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 33523,
              "name": "Test",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4499,
              "src": "185:4:30"
            },
            "id": 33524,
            "nodeType": "InheritanceSpecifier",
            "src": "185:4:30"
          }
        ],
        "canonicalName": "GaussianRNGTest",
        "contractDependencies": [
          194
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          33601,
          4499,
          1569,
          27067
        ],
        "name": "GaussianRNGTest",
        "nameLocation": "166:15:30",
        "scope": 33602,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 30
}